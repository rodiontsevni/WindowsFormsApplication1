<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAFgAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAA
        ABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAA
        ABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAWAAAABAAADxACG0jFAxxI1AMcRtQHJE7UBiJM1Acl
        T9QGIk7UBB5J1AMcSNQGIkzUBydR1AclT9QHJE/UBiJM1AcmUNQGIk7UCSpU1AorVdQIKFLUBydR1AYi
        TNQGIUzUAx5I1AcmUNQIJ1HUByZQ1AgnUNQGIUzUBB9K1AUiUMgACyEXAB9dKQg0ef4JNnv/CDV5/w5C
        hP8NQIP/DUGD/xJHiP8KOH3/CDV6/w0/gv8PRYb/DkKE/w5Chf8NP4L/D0SF/w9Dhf8USYr/FEqL/xNK
        i/8QRoj/DT+D/ww+gf8KOX3/DkKE/xFHiP8QRof/D0OF/w0+gf8KOn7/DUCD/gQvcDsAJWcvCjqA/go6
        f/8MPoT/EkmN/xBGiv8QR4v/E0qN/wo7gf8JOH//D0KH/xJKjf8PRYr/D0SJ/w5DiP8RSIz/DUGH/xhQ
        k/8ZUpT/F1CS/xJKjv8PRYr/DD+F/ww9g/8RSY3/E0uO/xNLjv8TS47/D0OI/ww+hP8PRYj+Bjd6SQAo
        bjMNQIX+DD2D/w9DiP8WT5L/FEyQ/xJJjf8RR4z/DD6F/wo7gv8QRov/E0uP/xBHjP8RSI3/EEaL/xVN
        kf8RRYr/HFWX/xZOkv8aVJb/FU+S/xBHjP8OQ4n/DkKI/xVOkv8XUJT/FU6S/xRMkP8SSIz/D0OJ/xFJ
        jf4NQYJOBDJ1PRBFiv4OQYf/EUWL/xxVmP8YUZX/GFGV/xdQlP8PQ4n/DD2E/xRMkf8YUpX/E0uP/xRN
        kv8SSo//GlOW/xpTl/8fWJr/GVKV/x1Wmf8ZU5f/E0qP/xBGjP8QRYz/F1CV/xpUmP8XUJT/Fk+T/xRL
        kP8RR43/FEyQ/gxAgU8INHk/E0iO/hJFi/8VS5D/IFmc/x1Vmf8aU5f/Hleb/xJJj/8QRYz/GVGW/x5Y
        m/8bVJj/GFGW/xVPlP8dV5r/H1mc/yNanv8gWZ3/IFqd/x9Znf8XUJX/FUyS/xJHjv8cVZn/Hlic/x1X
        mv8aVJj/GVCV/xRLkf8XUZT+Fk2OTwo+gkoXTpP+Gk+V/xpQlv8mX6L/IVqe/yRdof8kXqH/F02U/xVM
        kv8eVZr/Jl+i/yFanv8bVJn/GlOZ/yFbnv8fWJ3/KWGk/yhhpP8mYKP/JV+j/xtVmv8YUJb/F06U/yFa
        nv8iXKD/JmCj/ydgo/8iWZ7/GE2U/x5Xm/4dU5RPEEOHTx1Umf4fV5z/IFec/y1mqP8pY6b/KmOm/yli
        pv8cU5n/GlCX/yNboP8rZKf/JF2i/yBZn/8hW6D/KGGk/x9Xnf8vaKv/L2iq/yxmqf8rZaj/H1ie/x9X
        nf8bUpn/J2Ck/yhipf8xaqz/LWap/ylhpf8dVZv/Iluf/iBamk8US41YIFid/iFZn/8lXKH/MWqs/zFq
        rP8tZqr/LGWp/x9Xnf8dU5r/Jl6j/zBprP8nYKT/Iluh/yRdo/8sZan/HVKZ/zNsr/8zbK7/MGqs/y1n
        qv8jXaL/Ilqg/x5Um/8vaKz/Lmir/zRtsP8xaq3/LGWp/yBYnv8mX6P+IFqaTxhOkl4iWZ/+JVyi/ylg
        pf8tZqr/MWqt/y9prP8waaz/I1qh/yBWnP8sY6j/Mmuu/ylhpv8kXKP/J2Cl/y5nq/8qYqf/Nm+x/zRu
        sP81brH/MWuu/ypjqP8kW6H/I1uh/zNsrv8ybK//Nm+x/zRtsP8vZ6v/JFqh/ylipv4YS5BVIlebaSVc
        of4nXqT/KmOo/y1mqv8sZKn/M2yv/zVusf8mXaP/I1mg/y5mq/81brH/Lmar/ylhp/8rZKr/MGmu/zJs
        sP84cbT/Mmqu/zZvsv84cbT/M2yw/ydepP8oYKb/N3Cz/zVusf86c7X/N3Cz/zBorP8kW6L/KmOn/hJD
        il4iW55vKF2j/ithp/8tZqv/MGmu/zBprv82cLP/OXG1/ylfpv8nXKP/M2qu/zt0t/80bbH/LWWr/y9n
        rf8xa7D/M22x/zhxtP81brL/OXK1/zt1t/83cLT/LGSq/ypiqP84cbX/Nm+z/zx1t/86c7b/NW2x/yhe
        pP8tZav+GEiPaSJYnnwsYqf+LGOp/y9nrP80bbH/MGiu/zlytf86c7b/LWSq/ypgp/83brP/Pne6/zdw
        tP8xaa//MWqv/zRtsv82brP/O3O3/zdwtf87dbj/P3i7/zx1uP8waK7/LmWr/zlytv84cbX/OnO2/z53
        uv83cLT/LGKp/zFprv4cTZV2KF6khC9mrP4xaK7/NGyx/zhxtf8za7D/PXW5/z52uv8wZ63/L2Ws/zpy
        tv9Ber3/OXG2/zVutP81brT/N3C1/zdwtf9AeLv/P3i7/z94vP9DfL7/P3i7/zNrsf8xaK//PXa5/z12
        uv9Aebz/QXq9/zlwtf8uY6r/MGas/iJWnYUqYKWPMmmu/jVrsf83cLX/OnO4/zVtsv8+d7v/Pne7/zFn
        rv8xZ67/PXS5/0V+wP8/eLv/OHK3/zlyt/86crf/OXK3/0N7vv8/d7v/Qnu//0Z/wf9DfL//OXK3/zZv
        tP8/eLz/QHm9/0B5vP9DfL//O3O4/zNpsP80a7H+I1aeli9kqp00a7D+N260/zlyt/87c7j/OXC1/0B5
        vf9Aeb3/NGqw/zFmrf8/d7v/RX7B/0R9wP89d7v/PXa7/z12u/87dLn/RHu//0R9wP9DfMD/R4DD/0Z+
        wv85crj/OHG3/z53vP9DfL//Qnu//0Z/wv9AeLz/NGux/zhvtP4nWaCoMGaqrzVrsf44brT/O3O5/z52
        u/88dLn/RX3B/0J7v/83brT/NGmw/0R8wP9IgcT/Rn/D/0F7v/9Aeb7/Pna8/zx0uv9Hf8P/Rn/D/0V+
        wv9IgsT/R4HE/zt0uv87c7n/P3e8/0N8wP9DfMD/SIDD/0N7v/83brT/Pna6/ixhqLw0aq/HNmyy/jpw
        t/88dbr/Pna7/z10uf9EfcH/QXq//zlvtv81abH/RnzB/0mCxf9JgsX/QnzA/0F6v/9Cer7/OnK4/0d/
        w/9JgsX/TYbJ/0qDx/9HgMT/PHS6/zx0uv9Ce7//R3/D/0eAw/9Kg8b/Rn7C/zlvtf88dLn+MGSr0jZs
        sss4brT+O3K4/z11uv88dLn/PXS6/0N8wP9Cer//OG60/zRosP9GfsL/R4DE/0Z+w/9Ce8D/QnvA/0J6
        vv84brX/SoPG/0uEx/9PiMv/S4TH/0iAxP8+drz/PHO5/0Z/w/9Mhcj/SYLF/0yEx/9JgcT/PHO5/zty
        uP41arDcS4LIYkJ1utk9cbb/P3O3/z91uP8/dLj/RXu9/0J4vP89cbb/OWqw/0Z7vf9If8D/R32+/0Z9
        v/9Ee77/RHm8/z90uP9NhMT/T4bF/0+Gxf9KgcL/SH2//0B2uv8/dLn/SH7A/0yDw/9JgcL/TYPC/0p/
        wP8+c7f/SoHE2U2DyWkAAAAABS92KxFEiv4NPoX/EkiN/xVNkf8VTZH/F0+T/xJIjv8MPoX/EEOK/xhR
        lP8TSpD/FEyR/xJJjv8WTpL/E0qP/x5Wmf8fV5r/G1SX/xZQlP8SSI7/EEeM/xFHjP8WTZL/GFGU/xpS
        lf8XT5P/D0OK/xdOk/UIPYMdAAAAAAAAAAAAAAAAPHS+OxxTmv0nYKT/KWOn/yZgpf8mYKT/IFmf/xpR
        mP8gV53/KWOn/yNeo/8nYafxR4LHTlmR1j9Mhco/YZnaP2GZ2j9dmdo/WZXWP1CJ0j9Mic4/UInOP1mR
        1j9ZldY/XZXWP1mR0j9Mhc4/V4zbHQAAAAAAAAAAAAAAAAAAAAAAAAAAKV+n5Thxtf89drn/OHK2/zdx
        tv8waa//KV6m/zBorv85c7f/Mmux/zFrscUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGfMNeVIzMv1mR
        0L9WkM6/VIzNv02FyL9IfcK/TITGv1iR0L9TjM27U4/TQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAcAA
        AAPgA///4AP///////////////////////8=
</value>
  </data>
</root>